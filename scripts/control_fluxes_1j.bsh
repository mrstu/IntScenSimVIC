#!/bin/bash

#
# This delicate wrapper converts VIC ascii fluxes to ascii blocks (rows [time], columns [cells])
#
#   TODO: simplify this.
#

#cfg=$(echo "historical/CanESM2/wus_full.2" | sed 's|/|_|g')
cfg="flux2grd"
vicoutinfo=$VICOUTVARS #"home/raid3/stumbaugh/IS/CONUS/v2.2/simulator/setup/VIC_OUT_VARS.txt"

mkdir bin
gcc -lm -o bin/conffluxasc2grd $CONFLUX #/home/stumbaugh/lib/confullfluxasc2grd/confullfluxasc2grd.c

workdir=$(pwd -P)
dirfluxes=fluxes # Must add rows to metadata for soil layers 
newgrdloc=fluxgrids; mkdir -p $newgrdloc
fluxflist=all_forcings.txt
splitsize=3000 #100 #(for testing) #47k/3k ~ 47 processors WARM consists of 16 4core CPUs so WAG that it should be a good demand/performance balance 
## there's a trade off between the number of cells to process at once and the number of vars. 
# (4*1000=4000 columns stored dynamically in 2D array)
# (21*200=4200 columns stored dynamically in 2D array)
# ~10000 timesteps chunked
chunksize=8000

metadir="meta"; mkdir -p $metadir/splitlists
rm -f $metadir/splitlists/*
cellflist=$metadir/cellfilenames.txt
#cp $fluxflist $metadir/splitlists/splitlist00
sed 's/data_/flux_snow_/g' $fluxflist | sed 's/frc4_/flux_snow_/g' > $cellflist

#sed 's/data_/flux_snow_/g' $fluxflist > $cellflist
##awk '{if(NR>1){printf("data_%s\n",$0);};}' $fluxflist > $cellflist
~/bin/mksplitlists $cellflist $metadir $splitsize


headervarnamesfile=$metadir/headervarnames.txt
varfmtfile=$metadir/varformats.txt
#echo YEAR >> headvarnames2.txt
#echo MON >> headvarnames2.txt
#echo DAY >> headvarnames2.txt
awk '{print $2}' $vicoutinfo | sed 's/OUT_//g' > $headervarnamesfile
#awk '{printf("\"%%%s\"\n", $3)}' headervarnames.txt > $varfmtfile
#awk '{printf("\"%s\"\n", $3)}' headervarnames.txt > $varfmtfile
awk '{printf("%s\n", $3)}' $vicoutinfo > $varfmtfile
#exit

rm -f $newgrdloc/splitlists/*
cp -R $metadir/splitlists $newgrdloc

## Number of timesteps
#numsteps=$(wc -l $loc_vicbinary/ccsm3_A1B/fluxes_47.90625_-115.15625 | awk '{print $1;}')
fluxcleantoread=$(ls -A $dirfluxes | head -n 3 | tail -n 1)
numtoread=$(wc -l $dirfluxes/$fluxcleantoread | awk '{print $1;}')

## FOR TESTING
#decrease splitsize (above)
#numtoread=300 # only read first N timesteps
#use "break" in following "for" loop
##				

#splitfiles=($(ls -I "*.grd" $metadir/splitlists))
##echo "${splitfiles[@]:3:5}"
#njobs=$(echo "${#splitfiles[@]}")

mkdir sge_flux2grd

#mksplitgrdfiles.bsh $dirfluxes
splitfiles=$(ls -I "*.grd" $metadir/splitlists)	
rm sge_flux2grd/$cfg".cfg"
for sf in $splitfiles
do
    sfinst=$newgrdloc/splitlists/$sf

    # Number of location cells
    numwc=$(wc -l "$sfinst")
    numcells=$(echo $numwc | awk '{print $1;}')
        
    numtimes=$(wc -l $workdir/$dirfluxes/$(head -n 1 $sfinst)  | awk '{print $1;}')
    if [ $chunksize > $numtimes ]
    then 
        chunksize=$numtimes
    fi
    outdir="junk"
#    cat ~/sge_temple/sge_tmp_1j.txt > sge_qsub/$sf
#    sed -i 's/#$ -q.*/#$ -q default.q@compute-0-0,default.q@compute-0-1,default.q@compute-0-2/' sge_qsub/$sf
    echo $workdir/bin/conffluxasc2grd $workdir/$dirfluxes/ $workdir/$sfinst $numcells $numtoread $workdir/$headervarnamesfile $workdir/$varfmtfile $chunksize $outdir >> sge_flux2grd/$cfg".cfg"
#    echo bin/conffluxasc2grd $dirfluxes/ $sfinst $numcells $numtoread $headervarnamesfile $varfmtfile 200 $outdir >> sge_qsub/$sf
    #qsub sge_qsub/$sf
    #confluxasc2grd $dirfluxes $sf $numcells $numtoread $varnamesfile $outdir   
    #break
done

(
cd sge_flux2grd
~/bin/mk_qsub.bsh $cfg".qsub" $cfg".cfg"
sed -i 's/##$ -tc/#$ -tc 12/g' $cfg".qsub"
sed -i 's/#$ -q.*/#$ -q default.q@compute-0-0,default.q@compute-0-1,default.q@compute-0-2/' $cfg".qsub"

echo "NOW RUN:"
echo '(cd '$workdir'/sge_flux2grd; qsub '$cfg'.qsub)'
)